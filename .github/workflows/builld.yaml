# name of workflows
name: devops-pipeline
# define events workflow will run
on:
  push:
    branches: [master] # run this workflow when push branch master

# Jobs is a chain task defined to execute a function in pipeline. One workflow can have multiple jobs
jobs:
  docker: # name job
    runs-on: ubuntu-latest # config environment run this job
    steps: # define task of this job
      - name: Checkout # name of step => responsible: pull source code from repository to this device
        uses: actions/checkout@v2 # action build in of Github workflow

      - name: Login Docker Hub # responsible: login docker hub
        uses: docker/login-action@v1
        with: # config parameter
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Setup Docker Buildx # responsible: setup docker
        uses: docker/setup-buildx-action@v1
        id: buildx # using id to using output of this step as input of another

      - name: Cache Docker Image Layers # optimize workflow store cache cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        id: docker_build
        with: # config parameter
          context: ./ # folder to run docker build
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/devops-pipeline
          cache-from: type=local,src=/tmp/.buildx-cache # using cache to optimize workflow
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Verify # Check success or failure of step build and push
        run: echo ${{ steps.docker_build.outputs.digest }}
